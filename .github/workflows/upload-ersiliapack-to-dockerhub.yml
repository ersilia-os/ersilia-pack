name: "Test Ersilia-Pack [push case: Upload to dockerhub]"
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
  
jobs:
  ruff-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff
        run: ruff check --output-format=github .

  run-pytest:
    runs-on: ubuntu-latest
    needs: ruff-format
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.10.10"

      - name: Install dependencies
        run: |
          conda install git-lfs -c conda-forge
          git-lfs install
          conda install gh -c conda-forge
          python -m pip install -e .[test]

      - name: Run pytest
        run: |     
           pip install . 
           pip install pytest httpx
           pytest -vv
  
  test-pipeline:
    runs-on: ubuntu-latest
    needs: run-pytest
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: "3.10"

      - name: Install dependencies
        run: |
          conda install git-lfs -c conda-forge
          git-lfs install
          conda install gh -c conda-forge
          pip install -e .

      - name: Make pipeline.sh executable
        run: chmod +x ./pipeline.sh

      - name: Testing synhchronous endpoints pipeline
        run: ./pipeline.sh eos3b5e
        
      - name: Testing asynhchronous endpoints pipeline
        run: ./async_pipeline.sh eos3b5e

  upload_ersiliapack_to_dockerhub:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: test-pipeline
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: Dockerfile.condapy38_23.11.0-2
            tag: ersiliaos/ersiliapack-conda-py38
            version: py38_23.11.0-2
          - dockerfile: Dockerfile.condapy39_24.7.1-0
            tag: ersiliaos/ersiliapack-conda-py39
            version: py39_24.7.1-0
          - dockerfile: Dockerfile.condapy310_24.7.1-0
            tag: ersiliaos/ersiliapack-conda-py310
            version: py310_24.7.1-0
          - dockerfile: Dockerfile.condapy311_24.7.1-0
            tag: ersiliaos/ersiliapack-conda-py311
            version: py311_24.7.1-0
          - dockerfile: Dockerfile.condapy312_24.7.1-0
            tag: ersiliaos/ersiliapack-conda-py312
            version: py312_24.7.1-0
          - dockerfile: Dockerfile.pip3.8-slim-bullseye
            tag: ersiliaos/ersiliapack-py38
            version: 3.8-slim-bullseye
          - dockerfile: Dockerfile.pip3.9-slim-bullseye
            tag: ersiliaos/ersiliapack-py39
            version: 3.9-slim-bullseye
          - dockerfile: Dockerfile.pip3.10-slim-bullseye
            tag: ersiliaos/ersiliapack-py310
            version: 3.10-slim-bullseye
          - dockerfile: Dockerfile.pip3.11-slim-bullseye
            tag: ersiliaos/ersiliapack-py311
            version: 3.11-slim-bullseye
          - dockerfile: Dockerfile.pip3.12-slim-bullseye
            tag: ersiliaos/ersiliapack-py312
            version: 3.12-slim-bullseye

    steps:
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
    
      # log in to dockerhub
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          

      # Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v4

      # Copy and run the script from ersilia that generates the requisite Dockerfiles
      - name: Generate Dockerfiles
        env:
          VERSION: ${{ matrix.version }}
        run: |
          wget -O Dockerfile.conda https://raw.githubusercontent.com/ersilia-os/ersilia/master/dockerfiles/dockerize-ersiliapack/base/Dockerfile.conda
          wget -O Dockerfile.pip https://raw.githubusercontent.com/ersilia-os/ersilia/master/dockerfiles/dockerize-ersiliapack/base/Dockerfile.pip
          wget -O generate_dockerfiles.py https://raw.githubusercontent.com/ersilia-os/ersilia/master/dockerfiles/dockerize-ersiliapack/base/generate_dockerfiles.py
          python generate_dockerfiles.py $VERSION
          ls -l
          rm Dockerfile.conda Dockerfile.pip generate_dockerfiles.py
          ls -l

      # Build and push the Docker images
      - name: Build and push images
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ matrix.tag }}:latest

